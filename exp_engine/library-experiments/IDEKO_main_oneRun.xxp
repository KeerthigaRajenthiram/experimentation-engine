package IDEKO;

workflow IDEKO_multi_main {
  define task ReadData;
  define task TrainModel;
  define task EvaluateModel;
  define task PrepareData;

  // Task CONNECTIONS
  START -> ReadData -> PrepareData -> TrainModel -> EvaluateModel -> END;

  configure task ReadData {
    implementation "IDEKO/ReadData";
    dependency "IDEKO/Binary_v1/src/**";
  }

  configure task EvaluateModel {
    implementation "IDEKO/EvaluateModel";
    dependency "IDEKO/Binary_v1/src/**";
  }

  configure task PrepareData {
    subworkflow "IDEKO_DataPreprocessing";
  }

  // DATA
  define input data ExternalDataFile;

  // DATA CONNECTIONS
  ExternalDataFile --> ReadData.FileToRead;

  configure data ExternalDataFile {
    path "v1/ideko-subset/**";
  }

  define output data TrainedModelFolder;

  TrainModel.OutputFolder --> TrainedModelFolder;

  configure data TrainedModelFolder {
    path "output/trained_model/**";
  }

    ReadData.X41 --> PrepareData.X2;
    ReadData.Y --> PrepareData.Y;
    ReadData.IndicatorList --> PrepareData.IndicatorList;

    PrepareData.Timestamps42 --> TrainModel.Timestamps;
    PrepareData.Features --> TrainModel.Features;
    PrepareData.XTrain --> TrainModel.XTrain;
    PrepareData.XTest --> TrainModel.XTest;
    PrepareData.YTrain --> TrainModel.YTrain;
    PrepareData.YTest --> TrainModel.YTest;
    PrepareData.XPad --> TrainModel.XPad;
    PrepareData.YPad --> TrainModel.YPad;

    TrainModel.OutputFolder --> EvaluateModel.OutputFolder;
    TrainModel.XTest --> EvaluateModel.XTest;
    TrainModel.YTest --> EvaluateModel.YTest;
    TrainModel.XPad --> EvaluateModel.XPad;
    TrainModel.YPad --> EvaluateModel.YPad;
    TrainModel.Timestamps --> EvaluateModel.Timestamps2;
    TrainModel.Features --> EvaluateModel.Features;

}

workflow TrainModelNN from IDEKO_multi_main {
  configure task TrainModel {
    implementation "IDEKO/TrainModelNN";
    dependency "IDEKO/Binary_v1/src/**";
  }
}

workflow TrainModelRNN from IDEKO_multi_main {
  configure task TrainModel {
    implementation "IDEKO/TrainModelRNN";
    dependency "IDEKO/Binary_v1/src/**";
  }
}

experiment EXP {
  intent FindBestClassifier;
  control {
    S1;
  }

  space S1 of TrainModelNN {
    strategy gridsearch;
    param epochs_vp = enum(2);
    param batch_size_vp = enum(64);
    configure task TrainModel {
      param epochs = epochs_vp;
      param batch_size = batch_size_vp;
    }
  }

}
